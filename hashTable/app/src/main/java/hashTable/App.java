/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashTable;

import hashTable.Classes.Movie;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;


public class App {

    public static void main(String[] args) throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        //Movies of 2017
        ArrayList<Movie> movies2017 = new ArrayList<>();
        movies2017.add(new Movie("Wonder Woman", dateFormat.parse("2017-06-02"), "Gal Gadot", dateFormat.parse("2017-05-15"), "Action"));
        movies2017.add(new Movie("Dunkirk", dateFormat.parse("2017-07-21"), "Fionn Whitehead", dateFormat.parse("2017-07-13"), "War"));
        movies2017.add(new Movie("Get Out", dateFormat.parse("2017-02-24"), "Daniel Kaluuya", dateFormat.parse("2017-02-17"), "Horror"));
        movies2017.add(new Movie("Coco", dateFormat.parse("2017-11-22"), "Anthony Gonzalez", dateFormat.parse("2017-10-20"), "Animation"));

        // movies of 2016
        ArrayList<Movie> movies2016 = new ArrayList<>();
        movies2016.add(new Movie("La La Land", dateFormat.parse("2016-12-09"), "Ryan Gosling", dateFormat.parse("2016-11-23"), "Musical"));
        movies2016.add(new Movie("Deadpool", dateFormat.parse("2016-02-12"), "Ryan Reynolds", dateFormat.parse("2016-02-08"), "Action"));
        movies2016.add(new Movie("Rogue One: A Star Wars Story", dateFormat.parse("2016-12-16"), "Felicity Jones", dateFormat.parse("2016-12-10"), "Sci-Fi"));
        movies2016.add(new Movie("Zootopia", dateFormat.parse("2016-03-04"), "Ginnifer Goodwin", dateFormat.parse("2016-02-13"), "Animation"));

        HashTable<Integer, ArrayList<Movie>> moviesByYear = new HashTable<>();
        moviesByYear.set(2017, movies2017);
        moviesByYear.set(2016, movies2016);

        System.out.println("Keys : " + moviesByYear.keys());
        System.out.println("Movies in 2017 :" + moviesByYear.get(2017));
        System.out.println("Movies in 2016 :" + moviesByYear.get(2016));
        System.out.println(moviesByYear.has(2015));

    }
}
